import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import math
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, f1_score
import pickle
import requests
import json
sampled_data = pd.read_csv('/content/dynamic_api_call_sequence_per_malware_100_0_306.csv')

mal_data = sampled_data.sample(n=40000, replace=False, random_state=42)

mal_data.drop('hash', axis=1, inplace=True)

X = mal_data.iloc[:, :-1]  # Features (100 attributes)
y = mal_data.iloc[:, -1]   # target variable 101 attribute

X.isnull().sum()

scaler = StandardScaler()
X_normalized = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_normalized, y, test_size=0.2, random_state=42)

# Random Forest Model
rf_model = RandomForestClassifier()
rf_model.fit(X_train, y_train)

# Serialize model using pickle
pickle.dump(random, open('model.pkl', 'wb'))


# Deserialize model
model = pickle.load(open('model.pkl', 'rb'))

